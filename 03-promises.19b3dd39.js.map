{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkBaC,SAASC,cAAc,SAC/BC,iBAAiB,UAGtB,SAA2BC,GACzBA,EAAMC,iBACN,MAAQC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IAAaL,EAAMM,cACpD,IAAIC,EAAW,EACXC,EAAQH,EAAOI,MACfC,EAAaC,OAAOC,SAAST,EAAMM,OAEvCI,QAAUC,aAAY,KAEN,IAAVN,GACFO,cAAcF,SAGhBN,GAAY,EAlChB,SAAuBA,EAAUJ,GAE/B,OAAO,IAAIa,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAELH,EACFF,EAAQ,C,SAACV,E,MAAUJ,IAEnBe,EAAO,C,SAACX,E,MAAUJ,GAAO,GAE1BA,EAAM,G,CAwBToB,CAAchB,EAAUG,GACzBc,MAAK,EAACjB,SAAEA,EAAQJ,MAAEA,MAEjBR,EAAA8B,OAAOC,QAAQ,uBAAuBnB,QAAeJ,MAAU,IAEhEwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBR,EAAA8B,OAAOG,QAAQ,sBAAsBrB,QAAeJ,MAAU,IAE/DO,GAAcC,OAAOC,SAASR,EAAKK,OACnCD,GAAS,CAAC,GAERJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    \n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n  \n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  })\n  \n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', formSubmitHandler);\n\n\nfunction formSubmitHandler(event) {\n  event.preventDefault();\n  const { elements: { delay, step, amount } } = event.currentTarget;\n  let position = 0;\n  let times = amount.value;\n  let sumOfDelay = Number.parseInt(delay.value);\n  \n  timerId = setInterval(() => {\n    \n    if (times === 1) {\n      clearInterval(timerId);\n    }\n    \n    position += 1;\n    \n    createPromise(position, sumOfDelay)\n  .then(({ position, delay }) => {\n    \n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n   sumOfDelay += Number.parseInt(step.value);\n   times -= 1;\n   \n  }, step.value)\n   \n}\n"],"names":["$9EgcF","parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","position","times","value","sumOfDelay","Number","parseInt","timerId","setInterval","clearInterval","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$75aa520dfb7f3d3e$var$createPromise","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.19b3dd39.js.map"}